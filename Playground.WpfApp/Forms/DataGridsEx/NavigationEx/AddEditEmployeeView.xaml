<controls:MetroWindow  
    x:Class="Playground.WpfApp.Forms.DataGridsEx.NavigationEx.AddEditEmployeeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Playground.WpfApp.Forms.DataGridsEx.NavigationEx"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:Playground.WpfApp.Converters"
    xmlns:da="clr-namespace:System.ComponentModel.DataAnnotations;assembly=System.ComponentModel.DataAnnotations"
    xmlns:helpers="clr-namespace:Playground.WpfApp.Behaviors"
    helpers:DialogCloserDependencyProperty.DialogResult="{Binding DialogResultDependencyPropertyVal}"
    mc:Ignorable="d"
    BorderBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterOwner"
    WindowTransitionsEnabled="True"
    TitleCaps="False"
    Title="{Binding Title}" Height="500" Width="700">

    <controls:MetroWindow.Resources>
        <converters:InverseBooleanConverter x:Key="InverseConverter"/>
        <converters:BoolToVisibilityConverter x:Key="VisibilityConverter"/>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="controls:ButtonHelper.PreserveTextCase" Value="True" />
        </Style>

        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Name="Border" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#D5F0F0FF" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ValidationErrorsTemplate">
            <StackPanel>
                <StackPanel.Resources>
                    <DataTemplate DataType="{x:Type da:ValidationResult}">
                        <TextBlock Text="{Binding ErrorMessage, Mode=OneWay, StringFormat='• {0}'}" FontSize="10" />
                    </DataTemplate>
                </StackPanel.Resources>
                <Label FontSize="12" FontWeight="Bold" Background="DeepSkyBlue" Foreground="White"  Content="The following errors must be fixed before you can Save:" />
                <ItemsControl Margin="10,0,0,0" ItemsSource="{Binding EmployeeModel.AllErrors, Mode=OneWay}" />
            </StackPanel>
        </DataTemplate>

        <!-- ReSharper disable once IdentifierTypo -->
        <ItemsPanelTemplate x:Key="VirtualizingStackPanel">
            <VirtualizingStackPanel />
        </ItemsPanelTemplate>
    </controls:MetroWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <!--First Row-->
        <!--First Row-->
        <StatusBar Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" >
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Row="0" Grid.Column="0" Margin="2">
                <CheckBox Width="100" IsChecked="{Binding SelectAllSkills}" Content="Select All" />
            </StatusBarItem>
            <StatusBarItem Grid.Row="0" Grid.Column="1" Margin="2">
                <CheckBox Width="100" IsChecked="{Binding ShowCheckedSkills, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsThreeState="True" Content="Show Selected" />
            </StatusBarItem>
            <StatusBarItem Grid.Row="0" Grid.Column="2" Margin="2" HorizontalContentAlignment="Right">
                <TextBlock TextAlignment="Right" Width="100" Foreground="Maroon" FontFamily="Cambria"  Text="{Binding SkillCountLabel}"  />
            </StatusBarItem>
        </StatusBar>

        <!--Second row-->
        <DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="2">
            <DataGrid
                Name="DgvSkills"
                Margin="3"
                AlternationCount="2"
                CanUserAddRows="False"
                SelectionMode="Single"
                AutoGenerateColumns="False"
                GridLinesVisibility="All"
                IsReadOnly="True"
                VerticalScrollBarVisibility="Visible"
                ItemsSource="{Binding SkillView}"
                SelectedItem="{Binding SelectedSkill}" Width="323">

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header=" Check" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox VerticalAlignment="Center" Margin="3"
                                          IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SkillCheckBoxCommand}">
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Skills"
                                                Width="*"
                                                Binding="{Binding Skill}"
                                                IsReadOnly="True">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock TextAlignment="Center" Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    <TextBox Style="{StaticResource FilterTextBoxStyles}" Tag="Filter..." Width="150" Text="{Binding DataContext.SkillFilterVal, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="3" Margin="3,0,75.375,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="First Name:" Margin="2" />
                <TextBox Grid.Row="1" Grid.Column="1"
                         Text="{Binding EmployeeModel.FirstName, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Width="180" Margin="2">
                </TextBox>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Last Name:" Margin="2" />
                <TextBox Grid.Row="2" Grid.Column="1"
                         Text="{Binding EmployeeModel.LastName, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Width="180" Margin="2">
                </TextBox>

                <TextBlock Grid.Row="3" Grid.Column="0" Text="Salary:" Margin="2" />
                <TextBox Grid.Row="3" Grid.Column="1"
                         Text="{Binding EmployeeModel.Salary, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Width="180" Margin="2" />

                <TextBlock Grid.Row="4" Grid.Column="0" Text="Job Title:" Margin="2" />
                <ComboBox Grid.Row="4" Grid.Column="1" Text="JobTitleText" Margin="2"
                          Width="180"
                          ItemsSource="{Binding JobTitles, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedJobTitle, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                          DisplayMemberPath="JobTitle"
                          ItemsPanel="{StaticResource VirtualizingStackPanel}" />

                <TextBlock Grid.Row="5" Grid.Column="0" Text="Department:" Margin="2" />
                <ComboBox Grid.Row="5" Grid.Column="1" Text="DepartmentText" Margin="2"
                          Width="180"
                          ItemsSource="{Binding Departments, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedDepartment, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                          DisplayMemberPath="DepartmentName"
                          ItemsPanel="{StaticResource VirtualizingStackPanel}" />

                <TextBlock Grid.Row="6" Grid.Column="0" Text="Ratings:" Margin="2" />
                <controls:NumericUpDown Grid.Row="6" Grid.Column="1" Width="180" Margin="2"
                    Value="{Binding EmployeeModel.Rating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"/>

                <TextBlock Grid.Row="7" Grid.Column="0" Text="IsActive:" Margin="2" />
                <CheckBox Grid.Row="7" Grid.Column="1" IsChecked="{Binding EmployeeModel.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" />

                <TextBlock Grid.Row="8" Grid.Column="0" Text="Hire Date:" Margin="2" />
                <DatePicker Grid.Row="8" Grid.Column="1" IsEnabled="{Binding IsEditing, Converter={StaticResource InverseConverter}}"
                            SelectedDate="{Binding EmployeeModel.StartDate, StringFormat=\{0:MMM-dd-yyyy\}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" BorderThickness="0" />

            </Grid>
        </DockPanel>

        <!--3rd row-->
        <StatusBar HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" Margin="2">
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="_Save"
                            Command="{Binding SaveCommand}"
                            HorizontalAlignment="Right"
                            Margin="4"
                            Width="65"
                            ToolTipService.ShowOnDisabled="True">
                        <Button.ToolTip>
                            <ToolTip Visibility="{Binding EmployeeModel.HasErrors, Converter={StaticResource VisibilityConverter}}">
                                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ValidationErrorsTemplate}" />
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Separator />
                    <Button Width="65" HorizontalAlignment="Right" Content="Cancel" ToolTip="Cancel" Command="{Binding CancelCommand}" Margin="2"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</controls:MetroWindow>
