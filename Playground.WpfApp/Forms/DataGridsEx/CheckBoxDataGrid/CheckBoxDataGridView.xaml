<controls:MetroWindow
        x:Class="Playground.WpfApp.Forms.DataGridsEx.CheckBoxDataGrid.CheckBoxDataGridView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:metroDialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        metroDialog:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d"
        BorderBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        WindowTransitionsEnabled="True"
        Title="{Binding Title}"
        MinWidth="475"
        MinHeight="450"
        Height="450"
        Width="475">

    <controls:MetroWindow.Resources>
        <ResourceDictionary>

            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="controls:ButtonHelper.PreserveTextCase" Value="True" />
            </Style>

            <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Value="*">
                        <Setter Property="Foreground" Value="Green" />
                        <Setter Property="TextDecorations" Value="Underline" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </controls:MetroWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Margin="90,2,2,2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--DataGrid: Employees-->
                <DockPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Margin="5" LastChildFill="True">
                    <Border Background="White" BorderBrush="LightGray" BorderThickness="1" CornerRadius="4" DockPanel.Dock="Top" Margin="2">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <CheckBox Content="Show Checked " IsChecked="{Binding ShowCheckedEmployees, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="4,10,2,2" />
                            <controls:DropDownButton Content=" Other Actions" ItemsSource="{Binding EmployeeActionCommands}" Margin="3">
                                <controls:DropDownButton.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding Path=Title}" />
                                        <Setter Property="Command" Value="{Binding Path=Command}" />
                                        <Setter Property="CommandParameter" Value="{Binding Path=ParameterText}" />
                                    </Style>
                                </controls:DropDownButton.ItemContainerStyle>
                            </controls:DropDownButton>
                        </StackPanel>
                    </Border>
                </DockPanel>

                <DockPanel Grid.Row="1" Grid.Column="1" Margin="5" VerticalAlignment="Top">
                    <DataGrid Name="dgvEmployees"
                              Margin="2"
                              BorderThickness="2"
                              ItemsSource="{Binding EmployeesView}"
                              SelectedItem="{Binding SelectedEmployee}"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              SelectionMode="Single"
                              GridLinesVisibility="All"
                              VerticalScrollBarVisibility="Visible"
                              RowHeaderWidth="27">

                        <DataGrid.Resources>
                            <Style x:Key="customCellStyle" TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanEditEmployee}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="SnapsToDevicePixels" Value="true" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight"  Value="Bold" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGrid.ColumnHeaderStyle>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanEditEmployee}" Value="False">
                                        <Setter Property="Background" Value="#FFDEDCD9" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header=" Check" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox VerticalAlignment="Center" Margin="3"
                                                      IsChecked="{Binding IsEmployeeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      IsEnabled="{Binding CanEditEmployee, UpdateSourceTrigger=PropertyChanged}"
                                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.EmployeeCheckBoxCommand}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="Employee"
                                                Width="Auto"
                                                Binding="{Binding EmployeeName}"
                                                IsReadOnly="True">

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding EmployeeName}" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>

                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock TextAlignment="Center" Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <TextBox Style="{StaticResource FilterTextBoxStyles}" Tag="Filter..." Width="150" Text="{Binding DataContext.EmployeeFilterVal, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
                <DockPanel Grid.Row="2" Grid.Column="1" Margin="5">
                    <TextBlock Text="{Binding EmployeeCountLabel}" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Center" FontSize="12" FontWeight="Bold" FontFamily="Cambria" />
                </DockPanel>
            </Grid>
        </DockPanel>

        <DockPanel Grid.Row="1" Margin="2">
            <StatusBar HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="2">
                <StatusBarItem HorizontalAlignment="Right">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button MinWidth="110" Width="Auto" HorizontalAlignment="Center" ToolTip="View Details" Command="{Binding DetailCommand}" Content="Detail" Margin="4,4,10,4" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </DockPanel>
    </Grid>
</controls:MetroWindow>